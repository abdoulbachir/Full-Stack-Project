name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**

jobs:
  # First job to run: deploy
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.3
        env:
          POSTGRES_USER: bachir
          POSTGRES_PASSWORD: password
          POSTGRES_DB: customer
        # Port to use. localhost:docker
        ports:
          - 5332:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v3
      - name: Send Hello Slack Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Deployment started :progress_bar: :fingerscrossed:"}' 
          ${{secrets.SLACK_WEBHOOK_URL}}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Need to be setup in repository settings: Secrets and Variables > Actions
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }} # Need to be setup in repository settings: Secrets and Variables > Actions

      - name: Set Build Number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT   # This is used to generate the build number and put it inside this env file GITHUB_OUTPUT

      - name: Send Slack Build Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Building with Maven :maven:"}' 
          ${{secrets.SLACK_WEBHOOK_URL}}

      - name: Build Package Push with Maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build # We're using verify because we need integration test. If not, we can use 'package'

      - name: Send Slack Docker Build Message
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":docker: Image tag:${{steps.build-number.outputs.BUILD_NUMBER}} pushed to https://hub.docker.com/repository/docker/bachir95/bachir.api/general"}' 
          ${{secrets.SLACK_WEBHOOK_URL}}

      - name: Update Dockerrun.aws.json api image tag with new build number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat Dockerrun.aws.json
          sed -i -E 's_(bachir95/bachir.api:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat Dockerrun.aws.json

      - name: Send Slack Message For EB Deploy
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":aws: Starting deploying to Elastic Beanstalk"}' 
          ${{secrets.SLACK_WEBHOOK_URL}}

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.EB_APPLICATION_NAME }}
          environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
          version_label: ${{steps.build-number.outputs.BUILD_NUMBER}}
          version_description: ${{github.SHA}}
          region: ${{ secrets.EB_REGION }}
          deployment_package: backend/Dockerrun.aws.json

      - name: Send Slack Message For EB Deploy
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":":githubloading: Committing to repo https://github.com/abdoulbachir/Full-Stack-Project"}' 
          ${{secrets.SLACK_WEBHOOK_URL}}

      - name: Commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Update Dockerrun.aws.json docker image with new tag ${{steps.build-number.outputs.BUILD_NUMBER}}"
          git push

      - name: Send Slack For Completed Push
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"deployment and commit completed :github_check_mark: :party_blob: - http://bachir-api-3rd-time-env.eba-qpsek5sk.us-east-1.elasticbeanstalk.com/ping"}' 
          ${{secrets.SLACK_WEBHOOK_URL}}

      - name: Send Slack Final Status Message
        if: always()
        run: >
          curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"Job Status ${{job.status}}"}' 
          ${{secrets.SLACK_WEBHOOK_URL}}

